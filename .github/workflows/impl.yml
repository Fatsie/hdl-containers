# Authors:
#   Sebastian Birke <git@se-bi.de>
#   Unai Martinez-Corral
#
# Copyright 2019-2021 Unai Martinez-Corral <unai.martinezcorral@ehu.eus>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: 'impl'

on:
  pull_request:
  push:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:
  repository_dispatch:
    types: [ impl ]

env:
  DOCKER_BUILDKIT: 1

jobs:


  impl-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:

        imgs:
          - build/impl

        sys:

          # Debian Buster
          - { os: debian/buster, arch: amd64 }

          # Debian Bullseye
          - { os: debian/bullseye, arch: amd64 }

    name: impl-build ${{ matrix.sys.arch }} ${{ matrix.sys.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - run: ./utils/setup.sh ${{ matrix.sys.arch }}

    # TODO: Add option 'pull' to Action 'build-test-release'.
    # Setup is required outside of the Action, because dockerPull needs it.
    - run: >-
        dockerPull -a ${{ matrix.sys.arch }} -c ${{ matrix.sys.os }}
        ghdl/yosys
        pkg/ghdl-yosys-plugin
        pkg/yosys

    - uses: ./utils/build-test-release
      with:
        gcr_token: '${{ secrets.GCR_JSON_KEY }}'
        gh_token: '${{ github.token }}'
        docker_user: '${{ secrets.DOCKER_USER }}'
        docker_pass: '${{ secrets.DOCKER_PASS }}'
        skip-release: ${{ github.event_name == 'pull_request' }}
        skip-test: True
        architecture: ${{ matrix.sys.arch }}
        collection: ${{ matrix.sys.os }}
        images: ${{ matrix.imgs }}


  impl-prjs:
    needs: [ impl-build ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sys:

          # Debian Buster
          - { os: debian/buster, arch: amd64 }

          # Debian Bullseye
          - { os: debian/bullseye, arch: amd64 }

        task:
          - { arch: ice40, prj: icestorm   }
          - { arch: ecp5,  prj: prjtrellis }

    name: '[${{ matrix.sys.os }}|${{ matrix.sys.arch }}] impl Â· ${{ matrix.task.arch }} ${{ matrix.task.prj }}'
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - run: ./utils/setup.sh ${{ matrix.sys.arch }}

    - run: >-
        dockerPull -a ${{ matrix.sys.arch }} -c ${{ matrix.sys.os }}
        build/impl
        pkg/nextpnr/${{ matrix.task.arch }}
        pkg/${{ matrix.task.prj }}

    - run: >-
        dockerBuild -a ${{ matrix.sys.arch }} -c ${{ matrix.sys.os }} -d
        impl/${{ matrix.task.arch }}
        impl/${{ matrix.task.prj }}

    - run: >-
        dockerTest -a ${{ matrix.sys.arch }} -c ${{ matrix.sys.os }}
        impl/${{ matrix.task.arch }}
        impl/${{ matrix.task.prj }}

    - name: Login to container registries
      if: github.event_name != 'pull_request' && github.repository == 'hdl/containers'
      uses: ./utils/registry-login
      with:
        cmd: |
          echo '${{ secrets.GCR_JSON_KEY }}' | docker login gcr.io -u _json_key --password-stdin
          echo '${{ github.token }}' | docker login ghcr.io -u gha --password-stdin
          echo '${{ secrets.DOCKER_PASS }}' | docker login docker.io -u '${{ secrets.DOCKER_USER }}' --password-stdin

    - if: github.event_name != 'pull_request' && github.repository == 'hdl/containers'
      run: >-
        dockerRelease ${{ matrix.sys.arch }} ${{ matrix.sys.os }}
        impl/${{ matrix.task.arch }}
        impl/${{ matrix.task.prj }}


  impl:
    needs: [ impl-build, impl-prjs ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:

        imgs:
          - >-
            impl/generic
            impl/pnr
            impl

        sys:

          # Debian Buster
          - { os: debian/buster, arch: amd64 }

          # Debian Bullseye
          - { os: debian/bullseye, arch: amd64 }

    name: impl ${{ matrix.sys.arch }} ${{ matrix.sys.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # TODO: Add option 'pull' to Action 'build-test-release'.
    # Setup is required outside of the Action, because dockerPull needs it.
    - run: ./utils/setup.sh ${{ matrix.sys.arch }}

    - run: >-
        dockerPull -a ${{ matrix.sys.arch }} -c ${{ matrix.sys.os }}
        build/impl
        pkg/nextpnr/ice40
        pkg/nextpnr/ecp5
        pkg/nextpnr/generic
        pkg/icestorm
        pkg/prjtrellis

    - uses: ./utils/build-test-release
      with:
        gcr_token: '${{ secrets.GCR_JSON_KEY }}'
        gh_token: '${{ github.token }}'
        docker_user: '${{ secrets.DOCKER_USER }}'
        docker_pass: '${{ secrets.DOCKER_PASS }}'
        skip-release: ${{ github.event_name == 'pull_request' }}
        architecture: ${{ matrix.sys.arch }}
        collection: ${{ matrix.sys.os }}
        images: ${{ matrix.imgs }}
