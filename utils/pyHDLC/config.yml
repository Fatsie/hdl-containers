# Authors:
#   Unai Martinez-Corral
#
# Copyright 2021 Unai Martinez-Corral <unai.martinezcorral@ehu.eus>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

HDLC: 0


anchors:
  <<: &EmptyPkgTarget
    target: ''
  <<: &BaseDockerfile
    dockerfile: base
  <<: &FormalDockerfile
    dockerfile: formal
  <<: &ImplDockerfile
    dockerfile: impl
  <<: &NextpnrDockerfile
    dockerfile: nextpnr
  <<: &OSVBDockerfile
    dockerfile: osvb


defaults:
  images:
    # Base
    build/base:  { <<: *BaseDockerfile, target: base }
    build/build: { <<: *BaseDockerfile, target: build }
    build/dev:   { <<: *BaseDockerfile }
    # Boolector
    pkg/boolector: *EmptyPkgTarget
    # CVC
    pkg/cvc: *EmptyPkgTarget
    # Formal
    formal/min: { <<: *FormalDockerfile, target: min }
    formal:     { <<: *FormalDockerfile, target: latest }
    formal/all: { <<: *FormalDockerfile }
    # GHDL
    ghdl/yosys:    { dockerfile: ghdl-yosys-plugin }
    pkg/ghdl:                        { target: pkg-mcode }
    pkg/ghdl/llvm: { dockerfile: ghdl, target: pkg-llvm }
    ghdl:                            { target: mcode }
    ghdl/llvm:     { dockerfile: ghdl, target: llvm }
    # Impl
    build/impl:      { <<: *ImplDockerfile, target: base }
    impl/ice40:      { <<: *ImplDockerfile, target: ice40 }
    impl/icestorm:   { <<: *ImplDockerfile, target: icestorm }
    impl/ecp5:       { <<: *ImplDockerfile, target: ecp5 }
    impl/prjtrellis: { <<: *ImplDockerfile, target: prjtrellis }
    impl/generic:    { <<: *ImplDockerfile, target: generic }
    impl/pnr:        { <<: *ImplDockerfile, target: pnr }
    # NextPnR
    build/nextpnr/base:  { <<: *NextpnrDockerfile, target: base }
    build/nextpnr/build: { <<: *NextpnrDockerfile, target: build }
    pkg/nextpnr/ice40:   { <<: *NextpnrDockerfile, target: pkg-ice40 }
    nextpnr/ice40:       { <<: *NextpnrDockerfile, target: ice40 }
    nextpnr/icestorm:    { <<: *NextpnrDockerfile, target: icestorm }
    pkg/nextpnr/nexus:   { <<: *NextpnrDockerfile, target: pkg-nexus }
    nextpnr/nexus:       { <<: *NextpnrDockerfile, target: nexus }
    nextpnr/prjoxide:    { <<: *NextpnrDockerfile, target: prjoxide }
    pkg/nextpnr/ecp5:    { <<: *NextpnrDockerfile, target: pkg-ecp5 }
    nextpnr/ecp5:        { <<: *NextpnrDockerfile, target: ecp5 }
    nextpnr/prjtrellis:  { <<: *NextpnrDockerfile, target: prjtrellis }
    pkg/nextpnr/generic: { <<: *NextpnrDockerfile, target: pkg-generic }
    nextpnr/generic:     { <<: *NextpnrDockerfile, target: generic }
    # Sim
    sim/osvb:
      <<: *OSVBDockerfile
    pkg/pono: *EmptyPkgTarget
    sim/scipy-slim:
      dockerfile: scipy
    sim/scipy:
      <<: *OSVBDockerfile
      argimg: sim/scipy-slim
    sim/octave-slim:
      dockerfile: octave
    sim/octave:
      <<: *OSVBDockerfile
      argimg: sim/octave-slim
    # SuperProve
    pkg/superprove: *EmptyPkgTarget
    # SymbiYosys
    pkg/symbiyosys: *EmptyPkgTarget
    # Yices2
    pkg/yices2: *EmptyPkgTarget
    # Z3
    pkg/z3: *EmptyPkgTarget
